<ResourceDictionary x:Class="Freengy.CommonResources.Styles.CommonResourcesHub" 
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Animations.xaml"/>
        <ResourceDictionary Source="BorderStyles.xaml"/>
        <ResourceDictionary Source="Brushes.xaml"/>
        <ResourceDictionary Source="Converters.xaml"/>
        <ResourceDictionary Source="ListBoxStyles.xaml"/>
        <ResourceDictionary Source="PasswordBoxStyles.xaml"/>
        <ResourceDictionary Source="TextBlockStyles.xaml"/>
        <ResourceDictionary Source="TextBoxStyles.xaml"/>
        <ResourceDictionary Source="Variables.xaml"/>
    </ResourceDictionary.MergedDictionaries>
   

    <!-- Button -->
    <Style TargetType="Button" x:Key="CommonButtonStyle">
        <Setter Property="UseLayoutRounding"   Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding"             Value="-2"/>
        <Setter Property="Margin"              Value="{StaticResource All4Margin}"/>
        <Setter Property="MinWidth"            Value="{StaticResource MinButtonWidth}"/>
        <Setter Property="MinHeight"           Value="{StaticResource MinButtonHeight}"/>
        <!--<Setter Property="MaxHeight"           Value="{StaticResource MaxButtonHeight}"/>-->
    </Style>
    <Style TargetType="Button" x:Key="{x:Type Button}" BasedOn="{StaticResource CommonButtonStyle}">

    </Style>
    <Style TargetType="Button" x:Key="HyperlinkButtonStyle" BasedOn="{StaticResource CommonButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Text="{TemplateBinding Button.Content}" Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}" Foreground="{TemplateBinding Button.Foreground}"
                               FontSize="{TemplateBinding Button.FontSize}" Visibility="{TemplateBinding Visibility}"
                               Margin="{TemplateBinding Margin}" Cursor="Hand" ToolTip="{TemplateBinding ToolTip}">

                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.Setters>
                                            <Setter Property="TextDecorations" Value="Underline"/>
                                        </Trigger.Setters>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <Style TargetType="ToolTip" x:Key="CommonToolTipStyle">
        <Setter Property="Placement"     Value="Top"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" Background="{TemplateBinding Background}">
                            <ContentControl Content="{TemplateBinding ToolTip.Content}"/>
                        </Border>

                        <Path Grid.Row="1" Data="M10,170 L10,180 20,170" Stretch="Fill" 
                              HorizontalAlignment="Left" Margin="20, 0, 0, 0" Width="25"
                              Fill="{TemplateBinding Background}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToolTip" x:Key="{x:Type ToolTip}" BasedOn="{StaticResource CommonToolTipStyle}">

    </Style>


</ResourceDictionary>