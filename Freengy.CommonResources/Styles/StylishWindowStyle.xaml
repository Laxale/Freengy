<ResourceDictionary x:Class="Freengy.CommonResources.Styles.StylishWindowStyle"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="CommonResourcesHub.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <SolidColorBrush x:Key="CommonCaptionBrush"                   Color="LightBlue"/>
<!--    <SolidColorBrush x:Key="CommonWindowBorderBrush"              Color="#007ACC" />-->
    <SolidColorBrush x:Key="CommonWindowBorderBrush"              Color="Transparent" />
    <SolidColorBrush x:Key="CommonWindowStatusForeground"         Color="#AA5522" />
    <SolidColorBrush x:Key="CommonWindowBorderBrushInactive"      Color="#999999" />
    <SolidColorBrush x:Key="CommonWindowStatusForegroundInactive" Color="#FFFFFF" />


    <Style x:Key="TitleBarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" Name="Bord">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Opacity" Value="0"/>
                                        </Trigger>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.6"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <ContentPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- x:Key="CommonWindowStyle" -->
    <Style x:Key="CommonWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="UseLayoutRounding"   Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="AllowsTransparency"  Value="True"/>
        <Setter Property="WindowStyle"         Value="None"/>
        <Setter Property="Background"          Value="Transparent"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <!--
                            7 is a magic number. By default Windows fits a maximized window with Margin
                            7 7 7 7 to fill entire screen (WPF .Net 4.5). Larger numbers produce a gap
                            between maximized window and screen edges; smaller numbers show parts of
                            the window outside of the current monitor on multi-display computers.
                        -->
                    <Grid Margin="14" TextOptions.TextRenderingMode="ClearType" TextOptions.TextFormattingMode="Display">
                        
                        <Border x:Name="PART_Border" BorderThickness="1" CornerRadius="4"
                                Background="{TemplateBinding Background}" BorderBrush="{StaticResource CommonWindowBorderBrush}">

                            <Border.Effect>
                                <DropShadowEffect Color="{StaticResource BlackColor}" Opacity="0.7" BlurRadius="7" ShadowDepth="2" Direction="315"/>
                            </Border.Effect>

                            <Grid Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <Border x:Name="TitleBar" Grid.Row="0" Background="Transparent" BorderThickness="0" 
                                        MouseLeftButtonDown="TitleBarMouseLeftButtonDown" MouseMove="TitleBarMouseMove">
                                    <Grid Height="32">
                                        <Grid.Resources>
                                            <Style TargetType="Path">
                                                <Setter Property="Stretch" Value="None"/>
                                                <Setter Property="StrokeThickness" Value="1"/>
                                                <Setter Property="IsHitTestVisible" Value="False"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
                                                <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                                            </Style>
                                        </Grid.Resources>
                                        
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="36"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="34"/>
                                            <ColumnDefinition Width="34"/>
                                            <ColumnDefinition Width="34"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- Иконка окна -->
                                        <Image x:Name="Icon" Grid.Column="0"
                                                Source="{Binding Path=Icon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                HorizontalAlignment="Right" Margin="4,-7,0,7"
                                                Width="32" Height="32" MouseLeftButtonDown="IconMouseLeftButtonDown"
                                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                     Path=Icon, 
                                                                     Mode=OneWay,
                                                                     Converter={StaticResource NullToVisibilityConverter}}"/>

                                        <!-- Заголовок окна -->
                                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                   Name="Caption" Margin="4,0,0,0" FontFamily="Segoe UI" FontSize="12" 
                                                   Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   Visibility="{Binding Path=ShowWindowTitle, Converter={StaticResource BoolToVisibilityConverter}}"/>

                                        <!-- Тулбар -->
                                        <ContentControl Grid.Column="2" Margin="4, 0, 4, 0" HorizontalAlignment="Right" Loaded="ToolbarHost_OnLoaded"/>

                                        <!-- Кнопка сворачивания -->
                                        <Button x:Name="MinButton" Grid.Column="3" Click="MinButtonClick" Style="{StaticResource TitleBarButtonStyle}"
                                                Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window},
                                                                     Path=ResizeMode, Converter={StaticResource ResizeModeToVisibilityConverter}}">
                                            <Path Data="M0,8 H10 M0,8 H10 M0,8 H10" StrokeThickness="1.1"/>
                                        </Button>

                                        <!-- Кнопка разворачивания -->
                                        <Button Grid.Column="4" x:Name="MaxButton" Click="MaxButtonClick" Style="{StaticResource TitleBarButtonStyle}"
                                                Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window},
                                                                     Path=ResizeMode, Converter={StaticResource ResizeModeToVisibilityConverter}}">
                                            <Path x:Name="PART_MaxButton_Path" Data="M0,0 H10 V8 H0.5 V0 M0,1 H10 M0,2 H10" StrokeThickness="1"/>
                                        </Button>

                                        <!-- Кнопка закрытия -->
                                        <Button Grid.Column="5" x:Name="CloseButton" Click="CloseButtonClick" Background="{StaticResource ErrorBrush}"
                                                Style="{StaticResource TitleBarButtonStyle}" Padding="4, 0, 0, 0">
                                            
                                            <Path StrokeThickness="1.1" Fill="{StaticResource BlackBrush}" 
                                                  Stroke="{StaticResource BlackBrush}" Data="{StaticResource CloseIconGeometry}" 
                                                  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="6, 4, 0, 0">
                                                <Path.RenderTransform>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="0.6" ScaleY="0.6"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Button>
                                    </Grid>
                                </Border>

                                <ContentPresenter Grid.Row="1" Margin="0" />
                                
                                <!--
                                <StatusBar x:Name="PART_StatusBar" Grid.Row="2" Height="24"
                                           Visibility="{Binding Path=}">
                                    <TextBlock Text="{Binding Path=StatusText}" Margin="4,0,0,0"/>

                                    <StatusBarItem HorizontalAlignment="Right">
                                        <ResizeGrip Opacity="0.75" />
                                    </StatusBarItem>
                                </StatusBar>
                                -->
                            </Grid>
                        </Border>

                        <Line MouseDown="OnSizeNorth" x:Name="lnSizeNorth" Stroke="Transparent" Cursor="SizeNS"
                              X1="1" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="1" StrokeThickness="3"/>

                        <Line MouseDown="OnSizeSouth" x:Name="lnSizeSouth" Stroke="Transparent"
                              Cursor="SizeNS" StrokeThickness="3" VerticalAlignment="Bottom" 
                              X1="1" X2="{TemplateBinding ActualWidth}" 
                              Y1="{TemplateBinding ActualHeight}" Y2="{TemplateBinding ActualHeight}"/>

                        <Line MouseDown="OnSizeWest" x:Name="lnSizeWest" Stroke="Transparent" Cursor="SizeWE"
                              X1="1" X2="1" Y1="1" Y2="{TemplateBinding ActualHeight}" StrokeThickness="3" />

                        <Line MouseDown="OnSizeEast" x:Name="lnSizeEast" Stroke="Transparent" 
                              Cursor="SizeWE" StrokeThickness="3" HorizontalAlignment="Right" 
                              X1="{TemplateBinding ActualWidth}" X2="{TemplateBinding ActualWidth}" 
                              Y1="1" Y2="{TemplateBinding ActualHeight}"/>

                        <Rectangle MouseDown="OnSizeNorthWest" x:Name="rectSizeNorthWest" Cursor="SizeNWSE" Fill="Transparent" 
                                   Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeNorthEast" x:Name="rectSizeNorthEast" Cursor="SizeNESW" Fill="Transparent" 
                                   Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Right" />
                        <Rectangle MouseDown="OnSizeSouthWest" x:Name="rectSizeSouthWest" Cursor="SizeNESW" Fill="Transparent" 
                                   Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeSouthEast" x:Name="rectSizeSouthEast" Cursor="SizeNWSE" Fill="Transparent" 
                                   Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_MaxButton_Path" Property="Data" Value="M0,3 H5 V8 H0 V3 M0,4 H5 M3,0 H8 V5 H7 M3,1 H8"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource CommonWindowBorderBrushInactive}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Style TargetType="{x:Type StatusBar}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource CommonWindowStatusForeground}" />
                        <Setter Property="Background" Value="{StaticResource CommonWindowBorderBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource CommonWindowStatusForegroundInactive}" />
                        <Setter Property="Background" Value="{StaticResource CommonWindowBorderBrushInactive}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>