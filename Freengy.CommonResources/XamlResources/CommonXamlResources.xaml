<ResourceDictionary x:Class="Freengy.CommonResources.XamlResources.CommonXamlResources" 
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters="clr-namespace:Freengy.CommonResources.Converters">

    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <converters:StringUriToImageSourceConverter x:Key="StringUriToImageSourceConverter"/>
    <converters:ReverseBooleanToVisibilityConverter x:Key="ReverseBoolToVisibilityConverter"/>

    <Thickness x:Key="StdMargin" Left="2" Top="2"/>
    <Thickness x:Key="4Left2TopMargin" Left="4" Top="2"/>
    <Thickness x:Key="4Left4TopMargin" Left="4" Top="4"/>
    <Thickness x:Key="All4Margin" Left="4" Top="4" Bottom="4" Right="4"/>

    <system:Double x:Key="CommonIconSize">32</system:Double>
    <system:Double x:Key="MinButtonWidth">60</system:Double>
    <system:Double x:Key="MinButtonHeight">20</system:Double>
    <system:Double x:Key="MinTextBoxWidth">30</system:Double>
    <system:Double x:Key="MaxButtonHeight">22</system:Double>

    <Color x:Key="FirstMainColor" A="255" R="255" G="160" B="0"/>
    <Color x:Key="SecondMainColor" A="255" R="210" G="210" B="210"/>

    <SolidColorBrush x:Key="FirstMainBrush" Color="Orange" />
    <SolidColorBrush x:Key="SecondMainBrush" Color="LightGray" />
    <SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="#EFEFF2" />

    <!-- Button -->
    <Style TargetType="Button" x:Key="CommonButtonStyle">
        <Setter Property="UseLayoutRounding"   Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding"             Value="-2"/>
        <Setter Property="Margin"              Value="{StaticResource All4Margin}"/>
        <Setter Property="MinWidth"            Value="{StaticResource MinButtonWidth}"/>
        <Setter Property="MinHeight"           Value="{StaticResource MinButtonHeight}"/>
        <!--<Setter Property="MaxHeight"           Value="{StaticResource MaxButtonHeight}"/>-->
    </Style>
    <Style TargetType="Button" x:Key="{x:Type Button}" BasedOn="{StaticResource CommonButtonStyle}">

    </Style>
    <Style TargetType="Button" x:Key="HyperlinkButtonStyle" BasedOn="{StaticResource CommonButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Text="{TemplateBinding Button.Content}" Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}" Foreground="{TemplateBinding Button.Foreground}"
                               FontSize="{TemplateBinding Button.FontSize}" Visibility="{TemplateBinding Visibility}"
                               Margin="{TemplateBinding Margin}" Cursor="Hand" ToolTip="{TemplateBinding ToolTip}">

                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.Setters>
                                            <Setter Property="TextDecorations" Value="Underline"/>
                                        </Trigger.Setters>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="CommonBorderStyle">
        <Setter Property="CornerRadius" Value="4"/>
        <!--                <Setter Property="BorderThickness" Value="1"/>-->
    </Style>

    <!-- Central common style switch for TextBlock -->
    <Style TargetType="TextBlock" x:Key="CommonTextBlockStyle">
        <Setter Property="UseLayoutRounding"   Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalAlignment"   Value="Center"/>
        <Setter Property="Margin"              Value="{StaticResource All4Margin}"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="{x:Type TextBlock}" BasedOn="{StaticResource CommonTextBlockStyle}">

    </Style>

    <!-- TextBox -->
    <Style TargetType="TextBox" x:Key="CommonTextBoxStyle">
        <Setter Property="UseLayoutRounding"   Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Margin"              Value="{StaticResource All4Margin}"/>
        <Setter Property="MinWidth"            Value="{StaticResource MinTextBoxWidth}"/>
        <Setter Property="MinHeight"           Value="{StaticResource MinButtonHeight}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="ErrorBorder" Style="{StaticResource CommonBorderStyle}" 
                            Background="{TemplateBinding Background}" BorderBrush="Red" BorderThickness="0">
                        <ScrollViewer Name="PART_ContentHost"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="ErrorBorder" Value="Orange"/>
                        </Trigger>
                        
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderThickness" TargetName="ErrorBorder" Value="2"/>

                            <Setter Property="ToolTip" 
                                    Value="{Binding RelativeSource={RelativeSource Mode=Self}, 
                                                    Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="{x:Type TextBox}" BasedOn="{StaticResource CommonTextBoxStyle}">

    </Style>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="CoolListBoxItemStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}"
                            Style="{StaticResource CommonBorderStyle}">

                        <ContentPresenter/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected" Value="True">
                            <Setter Property="ListBoxItem.Background" Value="Black"/>
                        </Trigger>

                        <Trigger Property="ListBoxItem.IsMouseOver" Value="True">
                            <Setter Property="ListBoxItem.Background" Value="Orange"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="Yellow"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Green"/>
                <Setter Property="Background" Value="Orange"/>
                <!--                            <Setter Property="BorderThickness" Value="5"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToolTip" x:Key="CommonToolTipStyle">
        <Setter Property="Placement"     Value="Top"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" Style="{StaticResource CommonBorderStyle}" 
                                Background="{TemplateBinding Background}">
                            <ContentControl Content="{TemplateBinding ToolTip.Content}"/>
                        </Border>

                        <Path Grid.Row="1" Data="M10,170 L10,180 20,170" Stretch="Fill" 
                              HorizontalAlignment="Left" Margin="20, 0, 0, 0" Width="25"
                              Fill="{TemplateBinding Background}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToolTip" x:Key="{x:Type ToolTip}" BasedOn="{StaticResource CommonToolTipStyle}">

    </Style>
</ResourceDictionary>